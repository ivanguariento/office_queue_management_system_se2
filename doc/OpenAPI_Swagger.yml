openapi: 3.0.3
info:
  title: Office Queue Management System API
  version: '1.0.0'
servers:
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: Services
    description: Manage and query services
  - name: Tickets
    description: Issue and manage tickets
paths:
  /api/services:
    get:
      tags:
        - Services
      summary: List all services
      operationId: getAllServices
      responses:
        '200':
          description: List of available services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
              examples:
                sample:
                  value:
                    - serviceId: 00000000-0000-0000-0000-000000000001
                      tagName: "servizio A"
                      averageServiceTime: 5
                      description: "Pratiche anagrafiche"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/services/{serviceTypeId}:
    get:
      tags:
        - Services
      summary: Get queue length for a specific service
      operationId: getQueueLength
      parameters:
        - name: serviceTypeId
          in: path
          required: true
          description: ServiceType ID (UUID)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Queue length (number of people waiting)
          content:
            application/json:
              schema:
                type: integer
                format: int32
              examples:
                sample:
                  value: 3
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/tickets/new:
    post:
      tags:
        - Tickets
      summary: Create a new ticket for a service
      operationId: createTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceTypeId
              properties:
                serviceTypeId:
                  type: string
                  format: uuid
                  description: ServiceType ID to issue ticket for
            examples:
              sample:
                value:
                  serviceTypeId: 00000000-0000-0000-0000-000000000001
      responses:
        '200':
          description: Ticket created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
              examples:
                sample:
                  value:
                    ticketId: 11111111-1111-1111-1111-111111111111
                    ticketCode: "servizio A1"
                    issuedAt: 2025-10-12T17:45:00.123Z
                    serviceId: 00000000-0000-0000-0000-000000000001
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Service:
      type: object
      properties:
        serviceId:
          type: string
          format: uuid
        tagName:
          type: string
        averageServiceTime:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      required:
        - serviceId
        - tagName
        - averageServiceTime
    Ticket:
      type: object
      properties:
        ticketId:
          type: string
          format: uuid
        ticketCode:
          type: string
        issuedAt:
          type: string
          format: date-time
          nullable: true
        serviceId:
          type: string
          format: uuid
      required:
        - ticketId
        - ticketCode
        - serviceId
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        details:
          nullable: true
          description: Additional error details
